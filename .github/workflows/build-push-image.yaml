name: Build and publish
on:
  schedule:
    - cron: "23 2 * * *"
  push:
    branches:
      - main
      - slim
  pull_request:
    branches:
      - main

env:
  # github.repository as <account>/<repo>
  IMAGE_NAME: winbox
  IMAGES: |
    docker.io/obeoneorg/winbox
    ghcr.io/obeone/winbox

jobs:
  Build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Cosign
        uses: sigstore/cosign-installer@main

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Get Winbox version
        id: version
        run: echo "version=$(./winbox_version.sh)" >> $GITHUB_OUTPUT

      - name: Parse semver string
        id: semver_parser
        uses: booxmedialtd/ws-action-parse-semver@v1
        with:
          input_string: "${{ steps.version.outputs.version }}"

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          images: ${{ env.IMAGES }}
          tags: |
            type=raw,value=latest,enable=${{ github.event_name != 'pull_request' && github.ref == 'refs/heads/main'  }}
            type=ref,event=branch
            type=ref,event=pr
            type=raw,value=${{ steps.semver_parser.outputs.major }},enable=${{ github.event_name != 'pull_request' && github.ref == 'refs/heads/main'  }}
            type=raw,value=${{ steps.semver_parser.outputs.major }}.${{ steps.semver_parser.outputs.minor }},enable=${{ github.event_name != 'pull_request' && github.ref == 'refs/heads/main'  }}
            type=raw,value=${{ steps.semver_parser.outputs.major }}.${{ steps.semver_parser.outputs.minor }}.${{ steps.semver_parser.outputs.patch }},enable=${{ github.event_name != 'pull_request' && github.ref == 'refs/heads/main'  }}
            type=raw,value=v${{ steps.semver_parser.outputs.major }},enable=${{ github.event_name != 'pull_request' && github.ref == 'refs/heads/main'  }}
            type=raw,value=v${{ steps.semver_parser.outputs.major }}.${{ steps.semver_parser.outputs.minor }},enable=${{ github.event_name != 'pull_request' && github.ref == 'refs/heads/main'  }}
            type=raw,value=v${{ steps.semver_parser.outputs.major }}.${{ steps.semver_parser.outputs.minor }}.${{ steps.semver_parser.outputs.patch }},enable=${{ github.event_name != 'pull_request' && github.ref == 'refs/heads/main'  }}

      - name: Publish image
        id: push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          pull: true
          cache-to: type=gha,mode=max
          cache-from: type=gha,mode=max

      - name: Sign the images with GitHub OIDC Token
        run: |
          set -e

          # In variables, "%%*( )" trim whitespace at beggining and end of variable
          for image in ${IMAGES}; do
            yes | cosign sign "${image%%*( )}@${DIGEST%%*( )}"
          done
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.push.outputs.digest }}
          COSIGN_EXPERIMENTAL: true
        if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
